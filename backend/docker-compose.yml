version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_volume:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost "]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - masato

  users-services:
    build: 
      context: .
      dockerfile: ./cmd/users/Dockerfile
    ports:
      - "${GRPC_SERVER_PORT}:9000" # Expose the gRPC server on port 9000
    container_name: users-services
    networks:
      - masato
  
  courses-service:
    build: 
      context: .
      dockerfile: ./cmd/courses/Dockerfile
    ports:
      - "${BACKEND_REST_PORT}:8081" 
    container_name: courses-service
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      masato:
        aliases:
          - backend # Adds "backend" as an alias for rest-server

  instructors-service:
    build: 
      context: .
      dockerfile: ./cmd/instructors/Dockerfile
    ports:
      - "${BACKEND_INSTRUCTOR_PORT}:8082" 
    container_name: instructors-service
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      masato:
        aliases:
          - instructors # Adds "instructors" as an alias for this service

  api-gateway:
    build: 
      context: .
      dockerfile: ./cmd/gateway/Dockerfile
    ports:
      - "8080:8080" # Expose the API gateway on port 8080
    container_name: api-gateway
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq-broker:
        condition: service_healthy
    environment:
      - GRPC_SERVER_HOST = users-services:9000
      - SQL_DB_DSN = root:123456@tcp(mysql:3306)/regdealer
    networks:
      - masato

  rabbitmq-broker:
    image: rabbitmq:3.11-management-alpine
    container_name: rabbitmq-broker
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - masato

  enrollments-service:
    build:
      context: .
      dockerfile: ./cmd/rabbitmq/receive/Dockerfile
    container_name: enrollments-service
    environment:
    - RABBITMQ_HOST=rabbitmq-broker
    - RABBITMQ_PORT=5672
    - GRPC_SERVER_HOST=users-services:9000
    depends_on:
      api-gateway:
        condition: service_started
      
    networks:
      - masato

volumes:
  mysql_volume:

networks:
  masato: 
    driver: bridge